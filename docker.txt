0205 今天是第一次学习docker

docker 可以让开发者们打包他们的应用以及依赖包到一个轻量级的容器中，然后发布到任何linux机器上，容器完全使用沙箱机制，相互之间不会有任何接口。

开发人员在本地编写代码，并使用docker容器玉同时共享她们的工作。他们使用docker将应用环境推送到测试环境中，并且执行自动或者手动测试。开发人员发现错误的时候，可以再开发环境中对其修复，然后重新部署到测试环境中。

Docker结构，包括三个基本概念：
1. image 镜像，相当于一个root文件系统
2. container 容器，镜像和容器的关系，就像class和object的关系，镜像是静态的定义，容器是镜像运行时候的实体。容器可以被创建、启动、停止、删除、暂停
3. repository 仓库，可以看成一个代码控制中心，用来保存镜像

一个docker里面可以有好几个container
老蚣怎么说？
想Kacoda这种写代码的平台，可以给你基于不同操作系统的playground,这是怎么做到的？就是docker,如果同时运行几台虚拟机的话速度会非常慢，但是docker提供了很轻便的环境。比如mobile作业，我们需要自己把apk打包上传上去，老师再下载我的apk看我的代码,但是如果我要上传的文件很多，就不方便，可以把文件全部打包到docker里面


Docker概念梳理：
docker image: docker镜像用于创建docker容器的模板
docker container: 是镜像运行的实体
docker client
docker host:物理或者虚拟机执行docker守护进程和容器
docker registry : 仓库用于保存镜像



Docker的使用：我安装了桌面版，在terminal输入：docker,可以获得全部指令
获取镜像：docker pull centos
启动docker容器： docker run -it centos /bin/bash
退出中断：exit
启动已经停止的容器：docker ps -a
停止一个容器： docker stop <容器id>
重启停止的容器：docker restart <容器id>
查看web运行容器: docker ps

